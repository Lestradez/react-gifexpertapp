{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAa9C,OACE,sBAAMC,SARY,SAACC,GACnBA,EAAEC,iBACAJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAgB,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,MAId,SACA,uBACIO,KAAO,OACPC,MAAST,EACTU,SAfoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,a,QCLfG,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEtC,OADAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAErB,sBAAKG,UAAY,yCAAjB,UACA,qBAAKC,IAAOJ,EAAKK,IAAON,IACxB,4BAAIA,Q,uBCPOO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEjBR,EAAM,0CAA0CS,UAAUF,GAAU,qDAC1EN,QAAQC,IAAI,SAASF,GAHE,SAIJU,MAAMV,GAJF,cAIjBW,EAJiB,gBAKFA,EAAKC,OALH,uBAKhBC,EALgB,EAKhBA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EAC1B,MAAM,CACJlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAVf,kBAchBc,GAdgB,4CAAH,sDCITK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEhBvB,mBAAS,CACjC6B,KAAM,GACNO,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdEC,qBAAW,WACTjB,EAAUC,GACPiB,MAAM,SAAAC,GAEHH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAIhB,CAAEb,IAIAc,EDnByBK,CAAcnB,GAAjCU,EADwB,EAC7BJ,KAAaO,EADgB,EAChBA,QAKrB,OAJAnB,QAAQC,IAAKe,GACbhB,QAAQC,IAAKkB,GAIX,qCACE,6BAAKb,IACHa,GAAW,2CACb,qBAAKjB,UAAY,aAAjB,SAGIc,EAAOF,KAAM,SAAAC,GAAG,OACd,cAAC,EAAD,eAEMA,GADIA,EAAIlB,aEYX6B,EA1BQ,WAAM,IAAD,EAEU3C,mBAAS,IAFnB,mBAEnB4C,EAFmB,KAEP7C,EAFO,KAG1B,OACE,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEI6C,EAAWb,KAAM,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCfjBsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.49270eb7.chunk.js","sourcesContent":["import React, {useState}from 'react'\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e)=>{\r\n    setInputValue (e.target.value);\r\n  }\r\n  const handleSubmit =(e)=>{\r\n    e.preventDefault();\r\n  if (inputValue.trim().length > 2){  \r\n    setCategories ( cats => [ inputValue, ...cats ]);\r\n    setInputValue('');\r\n  }\r\n  }\r\n  return (\r\n    <form onSubmit = {handleSubmit}>\r\n    <input\r\n        type = \"text\"\r\n        value = {inputValue}\r\n        onChange = {handleInputChange}\r\n        />\r\n    </form>\r\n    \r\n  )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}; \r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  console.log(id, title, url);\r\n  return (\r\n    <div className = 'card animate__animated animate__fadeIn'>\r\n    <img src = {url} alt = {title} />\r\n    <p>{title}</p>  \r\n    </div>\r\n  )\r\n}\r\n","  export const getGifs = async( category )=>{\r\n    \r\n  const url = 'https://api.giphy.com/v1/gifs/search?q='+encodeURI(category)+'&limit=10&api_key=zbBUVBESkjvce6JZ5b3bCS5pRIeWiYIu';\r\n  console.log('      '+url);\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n  const gifs = data.map( img=>{\r\n    return{\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n\r\n  })\r\n  return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from \"../Hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n  const { data:images, loading} = useFetchGifs( category );\r\n  console.log (images);\r\n  console.log (loading);\r\n  \r\n    \r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      { loading && <p>Loading...</p>} \r\n      <div className = \"card-grid \">\r\n        {\r\n\r\n          images.map ( img => (\r\n            <GifGridItem \r\n              key = { img.id }\r\n              {...img}\r\n            />  \r\n          ))\r\n        }\r\n      \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n    useEffect( () => {\r\n      getGifs ( category )\r\n        .then( imgs => {\r\n          \r\n            setState({\r\n              data: imgs,\r\n              loading: false\r\n            })  \r\n          \r\n        });\r\n    }, [ category ])\r\n\r\n\r\n\r\n  return state; //{data[], loading: true}\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n  const GifExpertApp = () =>{\r\n\r\n  const [categories, setCategories] = useState([]);  \r\n  return(\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories}/>\r\n    \r\n    <hr />\r\n\r\n    <ol>\r\n      {\r\n        categories.map ( category => \r\n          <GifGrid \r\n          key = {category}\r\n          category = {category}/>\r\n        ) \r\n      }\r\n    </ol>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpertApp\";\nimport './index.css';\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}